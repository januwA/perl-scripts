#!/usr/bin/perl

# 在发布Flutetr包时，需要设置环境变量，将使用这个脚本完成
# -p 发布时: 增加[http_proxy]和[https_proxy],删除[PUB_HOSTED_URL]和[FLUTTER_STORAGE_BASE_URL]
# -r 发布成功后，还原环境变量配置 

use strict;
use utf8;
use autodie;
use warnings;
use Encode qw(decode encode);
use Data::Dumper qw(Dumper);
use Getopt::Long qw(GetOptions);

my $helpTemp = <<'help';
flutetr package publish
在发布Flutetr包时，需要设置环境变量，将使用这个脚本完成
  --publish     增加[http_proxy]和[https_proxy],删除[PUB_HOSTED_URL]和[FLUTTER_STORAGE_BASE_URL]
  --reset       发布成功后，还原环境变量配置
  --proxy-port  设置[proxyPort],默认[19996]
help

my $publish;
my $reset;
my $help;
my $proxyPort = 19996;

if(!defined($ARGV)){
  print encode('utf-8', $helpTemp);
}

exit;

GetOptions (
            "proxy-port=i" => \$proxyPort,
            "reset" => \$reset,
            "publish"   => \$publish,
            "help"   => \$help,
            ) or die("Error in command line arguments\n");

if(defined($help)){
  print encode('utf-8', $helpTemp);
}

if(defined($publish) && defined($reset)){
  die "command line error.";
}

# 发布：设置环境变量，并执行发布命令
if(defined($publish)){
  $ENV{'http_proxy'} = "http://127.0.0.1:$proxyPort";
  $ENV{'https_proxy'} = "https://127.0.0.1:$proxyPort";

  delete $ENV{'PUB_HOSTED_URL'};
  delete $ENV{'FLUTTER_STORAGE_BASE_URL'};

  if(
    !(exists($ENV{'http_proxy'}) && 
    exists($ENV{'https_proxy'}) && 
    !exists($ENV{'PUB_HOSTED_URL'}) && 
    !exists($ENV{'FLUTTER_STORAGE_BASE_URL'})
    )
   ){
    warn encode('utf-8' , "命令出现意外情况!!\n");
    exit;
  }

  system 'flutter packages pub lish';
}

# 发布成功，重置环境变量
if(defined($reset)){
  $ENV{'PUB_HOSTED_URL'} = "https://pub.flutter-io.cn";
  $ENV{'FLUTTER_STORAGE_BASE_URL'} = "https://storage.flutter-io.cn";


  delete $ENV{'http_proxy'};
  delete $ENV{'https_proxy'};

    if(
    !(!exists($ENV{'http_proxy'}) && 
    !exists($ENV{'https_proxy'}) && 
    exists($ENV{'PUB_HOSTED_URL'}) && 
    exists($ENV{'FLUTTER_STORAGE_BASE_URL'})
    )
   ){
    warn encode('utf-8' , "命令出现意外情况!!\n");
  }
}
