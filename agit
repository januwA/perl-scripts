#!/usr/bin/perl

# 快速git脚本
# λ agit -h

use v5.10;
use strict;
use utf8;
use autodie;
use warnings;
use Encode qw(decode encode);
use Data::Dumper qw(Dumper);
use Getopt::Long qw(GetOptions);
use Term::ANSIColor;
use File::Basename;
use Cwd qw(abs_path);
use lib dirname (abs_path(__FILE__));

use PrintHelp;

my ($help, $amend, $togit, $push, $restore, $del, $new, $in, $commit, $merge);

GetOptions (
	"amend" 	=> \$amend,
	"togit" 	=> \$togit,
	"push=s" 	=> \$push,
	"restore" 	=> \$restore,
	"help"		=> \$help,
	"del"		=> \$del,
	"new"		=> \$new,
	"in"		=> \$in,
	"commit"	=> \$commit,
	"merge"		=> \$merge,
);

if(defined($help)){
	PrintHelp->new([
			'agit -h',
			'agit -amend',
			'agit -amend <message>',
		],
		{
			amend => {
				msg 	=> "修改最新的提交",
				default => "git add . && git commit --amend --no-edit && git push -f"
			},
			togit => {
				msg 	=> "把本地htps仓库转化为git仓库",
				default => "git remote set-url origin <仓库地址>"
			},
			push => {
				msg 	=> "提交到远程仓库",
				default => 'git add . && git commit -m "<message>" && git push'
			},
			restore => {
				msg 	=> "恢复工作树的修改",
				default => 'git restore .'
			},
			del => {
				msg 	=> "删除本地分支",
				default => 'git branch -d dev'
			},
			new => {
				msg 	=> "创建本地分支",
				default => 'git checkout -b dev'
			},
			in => {
				msg 	=> "切换分支",
				default => 'git checkout dev'
			},
			commit => {
				msg 	=> "保存所有本地所有变更，然后commit",
				default => 'git add . && git commit'
			},
			merge => {
				msg 	=> "合并本地分支",
				default => 'git merge dev'
			},
		});
	exit;
}

if(defined($amend)) {
	if ($ARGV[0]) {
		system "git add . && git commit --amend -m \"$ARGV[0]\" && git push -f";
	} else {
		system 'git add . && git commit --amend --no-edit && git push -f';
	}
}

if(defined($togit)) {
	system "git remote set-url origin $ARGV[0]"  if ( $ARGV[0] );
}

if(defined($push)) {
	system "git add . && git commit -m \"$push\" && git push";
}

if(defined($restore)) {
	if ($ARGV[0]) {
		system "git restore $ARGV[0]";
	} else {
		system 'git restore .';
	}
}

if(defined($new)) {
	my $name = $ARGV[0] // 'dev';
	system "git checkout -b $name";
}

if(defined($del)) {
	my $name = $ARGV[0] // 'dev';
	system "git branch -d $name";
}

if(defined($in)) {
	my $name = $ARGV[0] // 'dev';
	system "git checkout $name";
}

if(defined($merge)) {
	my $name = $ARGV[0] // 'dev';
	system "git merge $name";
}

if(defined($commit)) {
	system "git add . && git commit";
}